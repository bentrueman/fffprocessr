ggplot(aes(time, value, col = name, size = name)) +
facet_grid(rows = vars(param), cols = vars(sample)) +
scale_colour_manual(
values = c("black", "firebrick", "grey", "grey", "grey"),
labels = function(breaks) str_replace(breaks, "conc", "data")
) +
scale_size_manual(
values = c(1, 2, .5, .5, .5),
labels = function(breaks) str_replace(breaks, "conc", "data")
) +
geom_line() +
labs(x = "Retention time (min.)", y = "[Cu] (µg/L)")
deconvolved %>%
unnest(c(data, fitted, peaks)) %>%
pivot_longer(c(conc, fitted, starts_with("peak"))) %>%
ggplot(aes(time, value, col = name, size = name)) +
facet_grid(rows = vars(param), cols = vars(sample)) +
scale_colour_manual(
values = c("black", "firebrick", "grey", "grey", "grey"),
labels = function(breaks) str_replace(breaks, "conc", "data")
) +
scale_size_manual(
values = c(1, 2, .5, .5, .5),
labels = function(breaks) str_replace(breaks, "conc", "data")
) +
geom_line() +
labs(x = "Retention time (min.)", y = "[Cu] (µg/L)", col = NULL)
deconvolved %>%
unnest(c(data, fitted, peaks)) %>%
pivot_longer(c(conc, fitted, starts_with("peak"))) %>%
ggplot(aes(time, value, col = name, size = name)) +
facet_grid(rows = vars(param), cols = vars(sample)) +
scale_colour_manual(
values = c("black", "firebrick", "grey", "grey", "grey"),
labels = function(breaks) str_replace(breaks, "conc", "data")
) +
scale_size_manual(
values = c(1, 2, .5, .5, .5),
labels = function(breaks) str_replace(breaks, "conc", "data")
) +
geom_line() +
labs(x = "Retention time (min.)", y = "[Cu] (µg/L)", col = NULL, size = NULL)
deconvolved_emg %>%
unnest(c(data, fitted, peaks)) %>%
pivot_longer(c(conc, fitted, starts_with("peak"))) %>%
ggplot(aes(time, value, col = name, size = name)) +
facet_grid(rows = vars(param), cols = vars(sample)) +
scale_colour_manual(
values = c("black", "firebrick", "grey", "grey", "grey"),
labels = function(breaks) str_replace(breaks, "conc", "data")
) +
scale_size_manual(
values = c(1, 2, .5, .5, .5),
labels = function(breaks) str_replace(breaks, "conc", "data")
) +
geom_line() +
labs(x = "Retention time (min.)", y = "[Cu] (µg/L)", col = NULL, size = NULL)
deconvolved_emg %>%
unnest(c(data, fitted, peaks)) %>%
pivot_longer(c(conc, fitted, starts_with("peak"))) %>%
ggplot(aes(time, value, col = name, size = name)) +
facet_grid(rows = vars(param), cols = vars(sample)) +
scale_colour_manual(
values = c("black", "firebrick", "grey", "grey", "grey"),
labels = function(breaks) str_replace(breaks, "conc", "data")
) +
scale_size_manual(
values = c(1, 1, .5, .5, .5),
labels = function(breaks) str_replace(breaks, "conc", "data")
) +
geom_line() +
labs(x = "Retention time (min.)", y = "[Cu] (µg/L)", col = NULL, size = NULL)
deconvolved_emg %>%
unnest(c(data, fitted, peaks)) %>%
pivot_longer(c(conc, fitted, starts_with("peak"))) %>%
ggplot(aes(time, value, col = name, size = name)) +
facet_grid(rows = vars(param), cols = vars(sample)) +
scale_colour_manual(
values = c("black", "firebrick", "grey", "grey", "grey"),
labels = function(breaks) str_replace(breaks, "conc", "data")
) +
scale_size_manual(
values = c(1, .5, .5, .5, .5),
labels = function(breaks) str_replace(breaks, "conc", "data")
) +
geom_line() +
labs(x = "Retention time (min.)", y = "[Cu] (µg/L)", col = NULL, size = NULL)
deconvolved_emg %>%
unnest(c(data, fitted, peaks)) %>%
pivot_longer(c(conc, fitted, starts_with("peak"))) %>%
ggplot(aes(time, value, col = name, size = name)) +
facet_grid(rows = vars(param), cols = vars(sample)) +
scale_colour_manual(
values = c("black", "firebrick", "grey", "grey", "grey"),
labels = function(breaks) str_replace(breaks, "conc", "data")
) +
scale_size_manual(
values = c(1, 1, .5, .5, .5),
labels = function(breaks) str_replace(breaks, "conc", "data")
) +
geom_line() +
labs(x = "Retention time (min.)", y = "[Cu] (µg/L)", col = NULL, size = NULL)
mals %>%
ggplot(aes(time, conc)) +
facet_wrap(vars(param), scales = "free_y") +
geom_hline(yintercept = 0, col = "grey", linetype = 3) +
geom_line() +
labs(x = "Retention time (min.)", y = "Detector response", col = NULL)
mals %>% distinct(param)
mals %>% distinct(param) %>% mutate(p2 = fct_reorder(param, str_extract(param, "\\d+") %>% as.numeric()))
mals %>% distinct(param) %>% mutate(p2 = fct_reorder(param, str_extract(param, "\\d+") %>% as.numeric())) %>% pull(p2)
mals %>%
ggplot(aes(time, conc)) +
facet_wrap(vars(fct_reorder(param, str_extract(param, "\\d+") %>% as.numeric())), scales = "free_y") +
geom_hline(yintercept = 0, col = "grey", linetype = 3) +
geom_line() +
labs(x = "Retention time (min.)", y = "Detector response", col = NULL)
mals %>%
ggplot(aes(time, conc)) +
facet_wrap(vars(param), scales = "free_y") +
geom_hline(yintercept = 0, col = "grey", linetype = 3) +
geom_line()
mals_rg %>%
filter(param == "ls90") %>%
pivot_longer(c(rg_zimm, conc)) %>%
ggplot(aes(time, value)) +
facet_wrap(vars(name), scales = "free_y", ncol = 1) +
geom_point(data = function(x) filter(x, name == "rg_zimm")) +
geom_line(data = function(x) filter(x, name == "conc")) +
geom_hline(yintercept = 0, col = "grey", linetype = 3)
mals_rg %>%
filter(param == "ls90") %>%
pivot_longer(c(rg_zimm, conc)) %>%
ggplot(aes(time, value)) +
facet_wrap(vars(name), scales = "free_y", ncol = 1) +
geom_point() +
geom_hline(yintercept = 0, col = "grey", linetype = 3)
mals_rg %>%
filter(param == "ls90") %>%
pivot_longer(c(rg_zimm, conc)) %>%
ggplot(aes(time, value)) +
facet_wrap(vars(name), scales = "free_y", ncol = 1) +
geom_point(data = function(x) filter(x, name == "rg_zimm")) +
geom_line(data = function(x) filter(x, name == "conc")) +
geom_hline(yintercept = 0, col = "grey", linetype = 3)
mals_rg %>%
filter(param == "ls90") %>%
pivot_longer(c(rg_zimm, conc)) %>%
ggplot(aes(time, value)) +
facet_wrap(vars(name), scales = "free_y", ncol = 1) +
geom_point(data = function(x) filter(x, name == "rg_zimm")) +
geom_line(data = function(x) filter(x, name == "conc")) +
geom_hline(yintercept = 0, col = "grey", linetype = 3) +
labs(x = "Retention time (min.)", y = "Detector response", col = NULL)
mals_rg %>%
filter(param == "ls90") %>%
pivot_longer(c(rg_zimm, conc)) %>%
mutate(name = fct_recode(name, "ls90" = "conc", "Radius of gyration (nm)" = "rg_zimm")) %>%
ggplot(aes(time, value)) +
facet_wrap(vars(name), scales = "free_y", ncol = 1) +
geom_point(data = function(x) filter(x, name == "rg_zimm")) +
geom_line(data = function(x) filter(x, name == "conc")) +
geom_hline(yintercept = 0, col = "grey", linetype = 3) +
labs(x = "Retention time (min.)", y = NULL, col = NULL)
mals_rg %>%
filter(param == "ls90") %>%
pivot_longer(c(rg_zimm, conc)) %>%
mutate(name = fct_recode(name, "ls90" = "conc", "Radius of gyration (nm)" = "rg_zimm")) %>%
ggplot(aes(time, value)) +
facet_wrap(vars(name), scales = "free_y", ncol = 1) +
geom_point(data = function(x) filter(x, name == "Radius of gyration (nm)")) +
geom_line(data = function(x) filter(x, name == "ls90")) +
geom_hline(yintercept = 0, col = "grey", linetype = 3) +
labs(x = "Retention time (min.)", y = NULL, col = NULL)
mals_rg %>%
filter(timeslice %in% c(17.1, 24.1, 40)) %>%
mutate(timeslice = paste(timeslice, "min.")) %>%
ggplot(aes(x, y)) +
facet_wrap(vars(timeslice), scales = "free_y") +
geom_smooth(method = "lm") +
geom_point()
mals_rg %>%
filter(timeslice %in% c(17.1, 24.1, 40)) %>%
ggplot(aes(x, y)) +
facet_wrap(vars(timeslice), scales = "free_y") +
geom_smooth(method = "lm") +
geom_point()
mals_rg %>%
filter(timeslice %in% c(17.1, 24.1, 40)) %>%
mutate(timeslice = paste(timeslice, "min.")) %>%
ggplot(aes(x, y)) +
facet_wrap(vars(timeslice), scales = "free_y") +
geom_smooth(method = "lm") +
geom_point()
mals_rg %>%
filter(timeslice %in% c(17.1, 24.1, 40)) %>%
mutate(timeslice = paste(timeslice, "min.")) %>%
ggplot(aes(x, y)) +
facet_wrap(vars(timeslice), scales = "free_y") +
geom_smooth(method = "lm") +
geom_point() +
labs(x = expression("sin"^2*theta*"/2)"))
mals_rg %>%
filter(timeslice %in% c(17.1, 24.1, 40)) %>%
mutate(timeslice = paste(timeslice, "min.")) %>%
ggplot(aes(x, y)) +
facet_wrap(vars(timeslice), scales = "free_y") +
geom_smooth(method = "lm") +
geom_point() +
labs(x = expression("sin"^2*"("*theta*"/2)"))
mals_rg %>%
filter(timeslice %in% c(17.1, 24.1, 40)) %>%
mutate(timeslice = paste(timeslice, "min.")) %>%
ggplot(aes(x, y)) +
facet_wrap(vars(timeslice), scales = "free_y") +
geom_smooth(method = "lm") +
geom_point() +
labs(x = expression("sin"^2*"("*theta*"/2)"), y = "1/R")
data %>%
filter(param == "65Cu", time > 10.5, time < 16) %>%
mutate(dh = 2 * 1e9 * calculate_rh(time) ) %>%
ggplot(aes(dh, conc, col = sample)) +
geom_line() +
scale_x_continuous(
labels = function(breaks) if_else(breaks < 0, "", as.character(breaks))
)
data %>%
filter(param == "65Cu", time > 10.5, time < 16) %>%
mutate(dh = 2 * 1e9 * calculate_rh(time) ) %>%
ggplot(aes(dh, conc, col = sample)) +
geom_line() +
scale_x_continuous(
labels = function(breaks) if_else(breaks < 0, "", as.character(breaks))
) +
scale_colour_manual(values = c("firebrick", "grey")) +
labs(x = "Calculated hydrodynamic diameter (nm)", y = "[Cu] (µg/L)", col = NULL)
devtools::build_readme()
devtools::build_readme()
data %>%
filter(time > 5, time < 37.5) %>%
mutate(param = str_remove(param, "^\\d+")) %>%
ggplot(aes(time, conc, col = sample)) +
facet_wrap(vars(param), scales = "free_y", ncol = 2) +
geom_hline(yintercept = 0, col = "grey", linetype = 3) +
geom_line() +
scale_colour_manual(values = c("firebrick", "grey")) +
theme(legend.position = "bottom") +
labs(x = "Retention time (min.)", y = "Detector response", col = NULL)
data %>%
filter(time > 5, time < 37.5, param != "UV254_1") %>%
mutate(param = str_remove(param, "^\\d+")) %>%
ggplot(aes(time, conc, col = sample)) +
facet_wrap(vars(param), scales = "free_y", ncol = 2) +
geom_hline(yintercept = 0, col = "grey", linetype = 3) +
geom_line() +
scale_colour_manual(values = c("firebrick", "grey")) +
theme(legend.position = "bottom") +
labs(x = "Retention time (min.)", y = "Detector response", col = NULL)
data %>%
filter(time > 5, time < 37.5, param != "UV254_1") %>%
mutate(
param = fct_recode(param, "UV254" = "UV254_2"),
param = str_remove(param, "^\\d+") %>%
str_replace("(.+)(\\d+)$", "\\1[\\2]")
) %>%
ggplot(aes(time, conc, col = sample)) +
facet_wrap(vars(param), scales = "free_y", ncol = 2) +
geom_hline(yintercept = 0, col = "grey", linetype = 3) +
geom_line() +
scale_colour_manual(values = c("firebrick", "grey")) +
theme(legend.position = "bottom") +
labs(x = "Retention time (min.)", y = "Detector response", col = NULL)
data %>%
filter(time > 5, time < 37.5, param != "UV254_1") %>%
mutate(
param = fct_recode(param, "UV254" = "UV254_2"),
param = str_remove(param, "^\\d+") %>%
str_replace("(.+)(\\d{2,})$", "\\1[\\2]")
) %>%
ggplot(aes(time, conc, col = sample)) +
facet_wrap(vars(param), scales = "free_y", ncol = 2) +
geom_hline(yintercept = 0, col = "grey", linetype = 3) +
geom_line() +
scale_colour_manual(values = c("firebrick", "grey")) +
theme(legend.position = "bottom") +
labs(x = "Retention time (min.)", y = "Detector response", col = NULL)
data %>%
filter(time > 5, time < 37.5, param != "UV254_1") %>%
mutate(
param = fct_recode(param, "UV254" = "UV254_2"),
param = str_remove(param, "^\\d+") %>%
str_replace("(.+)(\\d{2,3})$", "\\1[\\2]")
) %>%
ggplot(aes(time, conc, col = sample)) +
facet_wrap(vars(param), scales = "free_y", ncol = 2) +
geom_hline(yintercept = 0, col = "grey", linetype = 3) +
geom_line() +
scale_colour_manual(values = c("firebrick", "grey")) +
theme(legend.position = "bottom") +
labs(x = "Retention time (min.)", y = "Detector response", col = NULL)
data %>%
filter(time > 5, time < 37.5, param != "UV254_1") %>%
mutate(
param = fct_recode(param, "UV254" = "UV254_2"),
param = str_remove(param, "^\\d+") %>%
str_replace("([:alpha:]+)(\\d+)$", "\\1[\\2]")
) %>%
ggplot(aes(time, conc, col = sample)) +
facet_wrap(vars(param), scales = "free_y", ncol = 2) +
geom_hline(yintercept = 0, col = "grey", linetype = 3) +
geom_line() +
scale_colour_manual(values = c("firebrick", "grey")) +
theme(legend.position = "bottom") +
labs(x = "Retention time (min.)", y = "Detector response", col = NULL)
data %>%
filter(time > 5, time < 37.5, param != "UV254_1") %>%
mutate(
param = fct_recode(param, "UV254" = "UV254_2"),
param = str_remove(param, "^\\d+") %>%
str_replace("([:alpha:]+)(\\d+)$", "\\1[\\2]")
) %>%
ggplot(aes(time, conc, col = sample)) +
facet_wrap(vars(param), scales = "free_y", ncol = 2, labeller = label_parsed) +
geom_hline(yintercept = 0, col = "grey", linetype = 3) +
geom_line() +
scale_colour_manual(values = c("firebrick", "grey")) +
theme(legend.position = "bottom") +
labs(x = "Retention time (min.)", y = "Detector response", col = NULL)
mals %>%
mutate(param = str_to_upper(param)) %>%
ggplot(aes(time, conc)) +
facet_wrap(vars(fct_reorder(param, str_extract(param, "\\d+") %>% as.numeric())), scales = "free_y") +
geom_hline(yintercept = 0, col = "grey", linetype = 3) +
geom_line() +
labs(x = "Retention time (min.)", y = "Detector response", col = NULL)
mals %>%
mutate(param = str_to_upper(param) %>% str_replace("([:alpha:]+)(\\d+)$", "\\1[\\2]")) %>%
ggplot(aes(time, conc)) +
facet_wrap(vars(fct_reorder(param, str_extract(param, "\\d+") %>% as.numeric())), scales = "free_y", labeller = label_parsed) +
geom_hline(yintercept = 0, col = "grey", linetype = 3) +
geom_line() +
labs(x = "Retention time (min.)", y = "Detector response", col = NULL)
data %>%
filter(param == "65Cu", time > 10.5, time < 16) %>%
mutate(dh = 2 * 1e9 * calculate_rh(time) ) %>%
ggplot(aes(dh, conc, col = sample)) +
geom_line() +
scale_x_continuous(
labels = function(breaks) if_else(breaks < 0, "", as.character(breaks))
) +
scale_colour_manual(values = c("firebrick", "grey")) +
labs(x = "Calculated hydrodynamic diameter (nm)", y = "[Cu] (µg/L)", col = NULL)
mals_rg %>%
filter(param == "ls90") %>%
pivot_longer(c(rg_zimm, conc)) %>%
mutate(name = fct_recode(name, "ls90" = "conc", "Radius of gyration (nm)" = "rg_zimm")) %>%
ggplot(aes(time, value)) +
facet_wrap(vars(name), scales = "free_y", ncol = 1) +
geom_point(data = function(x) filter(x, name == "Radius of gyration (nm)")) +
geom_line(data = function(x) filter(x, name == "ls90")) +
geom_hline(yintercept = 0, col = "grey", linetype = 3) +
labs(x = "Retention time (min.)", y = NULL, col = NULL)
mals_rg %>%
filter(timeslice %in% c(17.1, 24.1, 40)) %>%
mutate(timeslice = paste(timeslice, "min.")) %>%
ggplot(aes(x, y)) +
facet_wrap(vars(timeslice), scales = "free_y") +
geom_smooth(method = "lm") +
geom_point() +
labs(x = expression("sin"^2*"("*theta*"/2)"), y = "1/R")
devtools::build_readme()
deconvolved_emg %>%
unnest(c(data, fitted, peaks)) %>%
pivot_longer(c(conc, fitted, starts_with("peak"))) %>%
ggplot(aes(time, value, col = name, size = name)) +
scale_colour_manual(
values = c("black", "firebrick", "grey", "grey", "grey"),
labels = function(breaks) str_replace(breaks, "conc", "data")
) +
scale_size_manual(
values = c(1, 1, .5, .5, .5),
labels = function(breaks) str_replace(breaks, "conc", "data")
) +
geom_line() +
labs(x = "Retention time (min.)", y = "[Fe] (µg/L)", col = NULL, size = NULL)
deconvolved %>%
unnest(c(data, fitted, peaks)) %>%
pivot_longer(c(conc, fitted, starts_with("peak"))) %>%
ggplot(aes(time, value, col = name, size = name)) +
facet_wrap(vars(sample)) +
scale_colour_manual(
values = c("black", "firebrick", "grey", "grey", "grey"),
labels = function(breaks) str_replace(breaks, "conc", "data")
) +
scale_size_manual(
values = c(1, 2, .5, .5, .5),
labels = function(breaks) str_replace(breaks, "conc", "data")
) +
geom_line() +
labs(x = "Retention time (min.)", y = "[Cu] (µg/L)", col = NULL, size = NULL)
mals_rg %>%
filter(param == "ls90") %>%
pivot_longer(c(rg_zimm, conc)) %>%
mutate(name = fct_recode(name, "LS[90]" = "conc", "r[g]~(nm)" = "rg_zimm")) %>%
ggplot(aes(time, value)) +
facet_wrap(vars(name), scales = "free_y", ncol = 1, labeller = label_parsed) +
geom_point(data = function(x) filter(x, name == "r[g]~(nm)")) +
geom_line(data = function(x) filter(x, name == "LS[90]")) +
geom_hline(yintercept = 0, col = "grey", linetype = 3) +
labs(x = "Retention time (min.)", y = NULL, col = NULL)
devtools::build_readme()
data %>%
filter(param == "65Cu", time > 10.5, time < 16) %>%
mutate(dh = 2 * 1e9 * calculate_rh(time) ) %>%
ggplot(aes(dh, conc, col = sample)) +
geom_line()
data %>%
filter(param == "65Cu", time > 10.5, time < 16) %>%
mutate(dh = 2 * 1e9 * calculate_rh(time) ) %>%
ggplot(aes(dh, conc, col = sample)) +
geom_line() +
# scale_x_continuous(
#   labels = function(breaks) if_else(breaks < 0, "", as.character(breaks))
# ) +
scale_colour_manual(values = c("firebrick", "grey")) +
labs(x = "Calculated hydrodynamic diameter (nm)", y = "[Cu] (µg/L)", col = NULL)
data %>%
filter(param == "65Cu", time > 10.5, time < 16) %>%
mutate(dh = 2 * 1e9 * calculate_rh(time) ) %>%
ggplot(aes(dh, conc, col = sample)) +
geom_line()
data %>%
filter(param == "65Cu", time > 10.5, time < 16) %>%
mutate(dh = 2 * 1e9 * calculate_rh(time) ) %>%
ggplot(aes(dh, conc, col = sample)) +
geom_line() +
scale_colour_manual(values = c("firebrick", "grey")) +
labs(x = "Calculated hydrodynamic diameter (nm)", y = "[Cu] (µg/L)", col = NULL)
devtools::build_readme()
mals_rg %>%
filter(param == "ls90") %>%
pivot_longer(c(rg_zimm, conc)) %>%
mutate(name = fct_recode(name, "LS[90]" = "conc", "r[g]~(nm)" = "rg_zimm")) %>%
ggplot(aes(time, value)) +
facet_wrap(vars(name), scales = "free_y", ncol = 2, labeller = label_parsed) +
geom_point(data = function(x) filter(x, name == "r[g]~(nm)")) +
geom_line(data = function(x) filter(x, name == "LS[90]")) +
geom_hline(yintercept = 0, col = "grey", linetype = 3) +
labs(x = "Retention time (min.)", y = NULL, col = NULL)
mals_rg %>%
filter(param == "ls90") %>%
pivot_longer(c(rg_zimm, conc)) %>%
mutate(name = fct_recode(name, "LS[90]" = "conc", "r[g]~(nm)" = "rg_zimm")) %>%
ggplot(aes(time, value)) +
facet_wrap(vars(name), scales = "free_y", ncol = 2, labeller = label_parsed) +
geom_point(data = function(x) filter(x, name == "r[g]~(nm)"), alpha = .5) +
geom_line(data = function(x) filter(x, name == "LS[90]")) +
geom_hline(yintercept = 0, col = "grey", linetype = 3) +
labs(x = "Retention time (min.)", y = NULL, col = NULL)
mals_rg %>%
filter(param == "ls90") %>%
pivot_longer(c(rg_zimm, conc)) %>%
mutate(name = fct_recode(name, "LS[90]" = "conc", "r[g]~(nm)" = "rg_zimm")) %>%
ggplot(aes(time, value)) +
facet_wrap(vars(name), scales = "free_y", ncol = 2, labeller = label_parsed) +
geom_point(data = function(x) filter(x, name == "r[g]~(nm)"), alpha = .2) +
geom_line(data = function(x) filter(x, name == "LS[90]")) +
geom_hline(yintercept = 0, col = "grey", linetype = 3) +
labs(x = "Retention time (min.)", y = NULL, col = NULL)
mals_rg %>%
filter(param == "ls90") %>%
pivot_longer(c(rg_zimm, conc)) %>%
mutate(name = fct_recode(name, "LS[90]" = "conc", "r[g]~(nm)" = "rg_zimm")) %>%
ggplot(aes(time, value)) +
facet_wrap(vars(name), scales = "free_y", ncol = 2, labeller = label_parsed) +
geom_point(data = function(x) filter(x, name == "r[g]~(nm)"), alpha = .2, shape = 19) +
geom_line(data = function(x) filter(x, name == "LS[90]")) +
geom_hline(yintercept = 0, col = "grey", linetype = 3) +
labs(x = "Retention time (min.)", y = NULL, col = NULL)
?points
mals_rg %>%
filter(param == "ls90") %>%
pivot_longer(c(rg_zimm, conc)) %>%
mutate(name = fct_recode(name, "LS[90]" = "conc", "r[g]~(nm)" = "rg_zimm")) %>%
ggplot(aes(time, value)) +
facet_wrap(vars(name), scales = "free_y", ncol = 2, labeller = label_parsed) +
geom_point(data = function(x) filter(x, name == "r[g]~(nm)"), alpha = .2, shape = 16) +
geom_line(data = function(x) filter(x, name == "LS[90]")) +
geom_hline(yintercept = 0, col = "grey", linetype = 3) +
labs(x = "Retention time (min.)", y = NULL, col = NULL)
mals_rg %>%
filter(param == "ls90") %>%
pivot_longer(c(rg_zimm, conc)) %>%
mutate(name = fct_recode(name, "LS[90]" = "conc", "r[g]~(nm)" = "rg_zimm")) %>%
ggplot(aes(time, value)) +
facet_wrap(vars(name), scales = "free_y", ncol = 2, labeller = label_parsed) +
geom_point(data = function(x) filter(x, name == "r[g]~(nm)"), alpha = .2, shape = 16) +
geom_line(data = function(x) filter(x, name == "LS[90]")) +
geom_hline(yintercept = 0, col = "grey", linetype = 3) +
labs(x = "Retention time (min.)", y = NULL, col = NULL)
devtools::build_readme()
mals_rg %>%
filter(param == "ls90") %>%
pivot_longer(c(rg_zimm, conc)) %>%
mutate(name = fct_recode(name, "LS[90]" = "conc", "r[g]~(nm)" = "rg_zimm")) %>%
ggplot(aes(time, value)) +
facet_wrap(vars(name), scales = "free_y", ncol = 2, labeller = label_parsed) +
geom_point(data = function(x) filter(x, name == "r[g]~(nm)", time < 60), alpha = .2, shape = 16) +
geom_line(data = function(x) filter(x, name == "LS[90]")) +
geom_hline(yintercept = 0, col = "grey", linetype = 3) +
labs(x = "Retention time (min.)", y = NULL, col = NULL)
devtools::build_readme()

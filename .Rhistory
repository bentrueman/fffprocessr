iris %>%
filter(if_all(ends_with("Width"), ~ . > 4))
iris %>%
filter(if_any(ends_with("Width"), ~ . > 4))
?matches
x_var
tibble(time = c(NA, 0, 1, 2), conc = c(6, 7, NA, 8)) %>%
dplyr::filter(
dplyr::if_all(tidyselect::matches(tidyselect::all_of(c(x_var, y_var)))),
function(x) !is.na(x)
)
tibble(time = c(NA, 0, 1, 2), conc = c(6, 7, NA, 8)) %>%
dplyr::filter(
dplyr::if_all(tidyselect::matches(tidyselect::all_of(c(x_var, y_var)))),
.fn = function(x) !is.na(x)
)
tibble(time = c(NA, 0, 1, 2), conc = c(6, 7, NA, 8)) %>%
dplyr::filter(
.cols = dplyr::if_all(tidyselect::matches(tidyselect::all_of(c(x_var, y_var)))),
.fns = function(x) !is.na(x)
)
tibble(time = c(NA, 0, 1, 2), conc = c(6, 7, NA, 8)) %>%
dplyr::filter(
if_all(.cols = dplyr::if_all(tidyselect::matches(tidyselect::all_of(c(x_var, y_var)))),
.fns = function(x) !is.na(x))
)
tibble(time = c(NA, 0, 1, 2), conc = c(6, 7, NA, 8)) %>%
dplyr::filter(
dplyr::if_all(.cols = tidyselect::matches(tidyselect::all_of(c(x_var, y_var))),
.fns = function(x) !is.na(x))
)
tibble(time = c(NA, 0, 1, 2), conc = c(6, 7, NA, 8)) %>%
dplyr::filter(
dplyr::if_all(.cols = tidyselect::matches(tidyselect::all_of(c(x_var, y_var))),
.fns = function(x) !is.na(x))
)
tibble(time = c(NA, 0, 1, 2), conc = c(6, 7, NA, 8)) %>%
dplyr::filter(
dplyr::if_all(.cols = tidyselect::matches(tidyselect::all_of(c(x_var, y_var))),
.fns = function(x) !is.na(x))
)
tibble(time = c(NA, 0, 1, 2), conc = c(6, 7, NA, 8))
tibble(time = c(NA, 0, 1, 2), conc = c(6, 7, NA, 8)) %>%
dplyr::filter(
.cols = tidyselect::matches(tidyselect::all_of(c(x_var, y_var))),
.fns = function(x) !is.na(x))
)
tibble(time = c(NA, 0, 1, 2), conc = c(6, 7, NA, 8)) %>%
dplyr::filter(if_all(
.cols = tidyselect::matches(tidyselect::all_of(c(x_var, y_var))),
.fns = function(x) !is.na(x))
))
tibble(time = c(NA, 0, 1, 2), conc = c(6, 7, NA, 8)) %>%
dplyr::filter(if_all(
.cols = tidyselect::matches(tidyselect::all_of(c(x_var, y_var))),
.fns = function(x) !is.na(x)
))
document()
check()
rmarkdown::render("README.Rmd", "md_document")
load_icp(path)
load_icp(path) %>% group_by(sample, date, param) %>% count()
load_uv(path, UV254_1) %>% group_by(sample, date, param) %>% count()
combine_fff(load_icp(path), load_uv(path, UV254_1)) %>% group_by(sample, date, param) %>% count()
combine_fff(load_icp(path), load_uv(path, UV254_1))
combine_fff(load_icp(path), load_uv(path, UV254_1)) %>% group_by(sample, date, param) %>% count()
combine_fff(load_icp(path), load_uv(path, UV254_1)) %>% group_by(sample, date, param) %>% count() %>% pull(n) %>% sum()
7711 * 2
?load_uv
icp_data <- load_icp(path)
uv_data <- load_uv(path, UV254_1, UV254_2, LS90)
test_that("combine_fff() yields same number of rows as load_...() fns", {
icp_data <- load_icp(path)
uv_data <- load_uv(path, UV254_1, UV254_2, LS90)
expect_equal(
nrow(combine_fff(icp_data, uv_data)), sum(nrow(icp_data), nrow(uv_data))
)
})
library("testthat")
test_that("combine_fff() yields same number of rows as load_...() fns", {
icp_data <- load_icp(path)
uv_data <- load_uv(path, UV254_1, UV254_2, LS90)
expect_equal(
nrow(combine_fff(icp_data, uv_data)), sum(nrow(icp_data), nrow(uv_data))
)
})
icp_data
uv_data
nrow(icp_data)
nrow(uv_data)
uv_data
combine_fff(icp_data, uv_data)
test_that("combine_fff() yields same number of rows as load_...() fns", {
icp_data <- load_icp(path)
uv_data <- load_uv(path, UV254_1, UV254_2, LS90)
expect_equal(
nrow(combine_fff(icp_data, uv_data)),
sum(
nrow(filter(icp_data, sample != "blank")),
nrow(filter(icp_data, sample != "blank"))
)
)
})
icp_data %>% group_by(sample, date, param) %>% count()
icp_data %>% filter(sample != "blank") %>% group_by(sample, date, param) %>% count()
uv_data %>% filter(sample != "blank") %>% group_by(sample, date, param) %>% count()
combine_fff(icp_data, uv_data) %>% filter(sample != "blank") %>% group_by(sample, date, param) %>% count()
combine_fff(icp_data, uv_data) %>% filter(sample != "blank") %>% group_by(sample, date, param) %>% count() %>% pull(n) %>% sum()
test_that("combine_fff() yields same number of rows as load_...() fns", {
icp_data <- load_icp(path)
uv_data <- load_uv(path, UV254_1, UV254_2, LS90)
expect_equal(
nrow(combine_fff(icp_data, uv_data)),
sum(
nrow(filter(icp_data, sample != "blank")),
nrow(filter(uv_data, sample != "blank"))
)
)
})
dplyr::summarize_if(
combine_fff(load_icp(path), load_uv(path, UV254_1, UV254_2, LS90)),
is.numeric, ~ round(mean(.x), 1)
)
test_that("combine_fff() yields expected column means", {
expect_equal(
dplyr::summarize_if(
combine_fff(load_icp(path), load_uv(path, UV254_1, UV254_2, LS90)),
is.numeric, ~ round(mean(.x), 1)
),
tibble::tibble(time = 19, conc = 1.1, three_sigma = .5)
)
})
library(testthat)
library(fffprocessr)
test_check("fffprocessr")
rmarkdown::render("README.Rmd", "md_document")
document()
check()
path <- system.file("extdata", package = "fffprocessr")
icp_data <- load_icp(path)
uv_data <- load_uv(path, UV254_1, UV254_2, LS90)
sum(
nrow(filter(icp_data, sample != "blank")),
nrow(filter(uv_data, sample != "blank"))
)
nrow(combine_fff(icp_data, uv_data))
test_that("combine_fff() yields same number of rows as load_...() fns", {
icp_data <- load_icp(path)
uv_data <- load_uv(path, UV254_1, UV254_2, LS90)
expect_equal(
nrow(combine_fff(icp_data, uv_data)),
sum(
nrow(filter(icp_data, sample != "blank")),
nrow(filter(uv_data, sample != "blank"))
)
)
})
?test()
test()
check()
check()
library("devtools")
use_r("load_icp")
document()
check()
library(devtools)
use_r("load_fff")
document()
check()
document()
check()
use_r("load_direct_quant")
?load_icp
system.file("extdata", package = "fffprocessr")
?calibrate_mw
list.files(system.file("extdata", package = "fffprocessr"))
document()
document()
?load_direct_quant
path <- system.file("extdata", package = "fffprocessr")
load_direct_quant(path = paste0(path, "direct_quantification"))
document()
path <- system.file("extdata", package = "fffprocessr")
load_direct_quant(path = paste0(path, "direct_quantification"))
load_all()
path <- system.file("extdata", package = "fffprocessr")
load_direct_quant(path = paste0(path, "direct_quantification"))
path <- system.file("extdata", package = "fffprocessr")
path
paste0(path, "direct_quantification")
path <- system.file("extdata", package = "fffprocessr")
load_direct_quant(path = paste0(path, "/direct_quantification"))
document()
path <- system.file("extdata", package = "fffprocessr")
load_direct_quant(path = paste0(path, "/direct_quantification"))
path <- system.file("extdata", package = "fffprocessr")
load_direct_quant(path = paste0(path, "/direct_quantification")) %>% View
use_test("load_direct_quant")
path <- system.file("extdata", package = "fffprocessr")
file <- load_direct_quant(path = paste0(path, "/direct_quantification"))
file
mean(file$value)
mean(file$value, na.rm = TRUE)
document()
?load_direct_quant()
check()
use_test("load_direct_quant")
path <- system.file("extdata", package = "fffprocessr")
load_direct_quant(path = paste0(path, "/direct_quantification"))
document()
check()
build_readme()
rmarkdown::render("README.Rmd", "md_document")
library(devtools)
?read_table
library(tidyverse)
?read_table
?read_tsv
?read_delim
document()
check()
nrow(load_uv(path = path, UV254_1, UV254_2, LS90))
path <- system.file("extdata", package = "fffprocessr")
nrow(load_uv(path = path, UV254_1, UV254_2, LS90))
load_uv(path = path, UV254_1, UV254_2, LS90)
?load_uv
ath <- system.file("extdata", package = "fffprocessr")
load_uv(path = path, UV254_1, UV254_2, LS90)
path <- system.file("extdata", package = "fffprocessr")
file_list <- list.files(path = path, pattern = "*.txt", full.names = TRUE)
file_list
file_list[keep_files] %>%
rlang::set_names() %>%
purrr::map_dfr(
~ readr::read_table(
.x, col_names = FALSE,
col_types = readr::cols(.default = readr::col_character()),
...
), .id = "file"
)
file_list %>%
rlang::set_names() %>%
purrr::map_dfr(
~ readr::read_table(
.x, col_names = FALSE,
col_types = readr::cols(.default = readr::col_character()),
...
), .id = "file"
)
file_list %>%
rlang::set_names() %>%
purrr::map_dfr(
~ readr::read_table(
.x, col_names = FALSE,
col_types = readr::cols(.default = readr::col_character())
), .id = "file"
)
file_list %>%
rlang::set_names() %>%
purrr::map_dfr(
~ readr::read_table(
.x, col_names = FALSE, ...,
col_types = readr::cols(.default = readr::col_character())
), .id = "file"
)
file_list %>%
rlang::set_names() %>%
purrr::map_dfr(
~ readr::read_table(
.x, col_names = FALSE,
col_types = readr::cols(.default = readr::col_character()),
...
), .id = "file"
)
?read_table
massey <- readr_example("massey-rating.txt")
cat(read_file(massey))
read_table(massey)
test <- function(x, ...) read_table(x)
test(massey)
test <- function(x, ...) read_table(x, ...)
test(massey)
test <- function(x, ...) map(x, read_table(.x, ...))
test(massey)
test <- function(x, ...) map(x, ~ read_table(.x, ...))
test(massey)
document()
?load_uv
path <- system.file("extdata", package = "fffprocessr")
load_uv(path = path, UV254_1, UV254_2, LS90)
?list2
document()
path <- system.file("extdata", package = "fffprocessr")
load_uv(path = path, UV254_1, UV254_2, LS90)
?load_uv
path <- system.file("extdata", package = "fffprocessr")
load_uv(path = path, UV254_1, UV254_2, LS90)
load_uv
document()
path <- system.file("extdata", package = "fffprocessr")
load_uv(path = path, UV254_1, UV254_2, LS90)
document()
path <- system.file("extdata", package = "fffprocessr")
load_uv(path = path, UV254_1, UV254_2, LS90)
document()
path <- system.file("extdata", package = "fffprocessr")
load_uv(path = path, UV254_1, UV254_2, LS90)
document()
path <- system.file("extdata", package = "fffprocessr")
load_uv(path = path, UV254_1, UV254_2, LS90)
document
document()
document()
path <- system.file("extdata", package = "fffprocessr")
load_uv(path = path, UV254_1, UV254_2, LS90)
?rlang::`dyn-dots`
document()
library(devtools)
load_all()
?load_uv
path <- system.file("extdata", package = "fffprocessr")
path
file_list <- list.files(path = path, pattern = "*.txt", full.names = TRUE)
file_list
keep_files <- if(TRUE) {rep(TRUE, length(file_list))}
file_list[keep_files] %>%
rlang::set_names() %>%
purrr::map_dfr(
~ readr::read_table(
.x, col_names = FALSE,
col_types = readr::cols(.default = readr::col_character())
), .id = "file"
)
file_list[keep_files] %>%
rlang::set_names() %>%
purrr::map_dfr(
~ do.call(readr::read_table,
list(.x, col_names = FALSE,
col_types = readr::cols(.default = readr::col_character()))
), .id = "file"
)
document()
document()
path <- system.file("extdata", package = "fffprocessr")
load_uv(path = path, UV254_1, UV254_2, LS90)
load_uv
document()
load_uv
path <- system.file("extdata", package = "fffprocessr")
load_uv(path = path, UV254_1, UV254_2, LS90)
document()
path <- system.file("extdata", package = "fffprocessr")
load_uv(path = path, UV254_1, UV254_2, LS90)
document()
path <- system.file("extdata", package = "fffprocessr")
load_uv(path = path, UV254_1, UV254_2, LS90)
use_r("load_mals")
document
document()
?load_mals
path <- system.file("extdata/mals", package = "fffprocessr")
load_mals(path = path)
document()
path <- system.file("extdata/mals", package = "fffprocessr")
load_mals(path = path)
document()
check()
librarydevtools
library(devtools)
angles = c(7, 12, 20,  28, 36, 44, 52, 60, 68, 76, 84,
90, 100, 108, 116, 124, 132, 140, 148, 156, 164)
angles <- suppressMessages(
tibble::as_tibble(matrix(angles, byrow = TRUE, nrow = 7), .name_repair = "unique")
) %>%
dplyr::rename_all(~ paste0("v", stringr::str_extract(.x, "\\d+")))
library(tidyverse)
angles <- suppressMessages(
tibble::as_tibble(matrix(angles, byrow = TRUE, nrow = 7), .name_repair = "unique")
) %>%
dplyr::rename_all(~ paste0("v", stringr::str_extract(.x, "\\d+")))
angles
?load_mals
load_all
load_all()
load_all
?load_mals
path <- system.file("extdata/mals", package = "fffprocessr")
file_list <- list.files(path = path, pattern = ".+\\.txt", full.names = TRUE)
file_list
path <- system.file("extdata/mals", package = "fffprocessr")
load_mals(path = path, keywords = "ls\\d+-\\d+")
?fffprocessr::load_icp
path <- system.file("extdata", package = "fffprocessr")
load_icp(path = path)
path <- system.file("extdata", package = "fffprocessr")
data <- load_icp(path = path)
data %>%
group_by(sample, date, param) %>%
summarize(pk_area = integrate_peak(time, conc))
?integrate_peak
data %>%
filter(time > 10) %>% # remove focus period
group_by(sample, date, param) %>%
summarize(pk_area = integrate_peak(time, conc))
path <- system.file("extdata", package = "fffprocessr")
data <- load_icp(path = path)
data %>%
filter(time > 10) %>% # remove focus period
group_by(sample, date, param) %>%
summarize(pk_area = integrate_peak(time, conc))
?load_mals
ath <- system.file("extdata/mals", package = "fffprocessr")
path <- system.file("extdata/mals", package = "fffprocessr")
file_list <- list.files(path = path, pattern = ".+\\.txt", full.names = TRUE)
file_list
angle_names = "ls\\d+-\\d+"
angle_names
stringr::str_detect(file_list, angle_names)
file_list[stringr::str_detect(file_list, angle_names)]
document()
load_mals
path <- system.file("extdata/mals", package = "fffprocessr")
load_mals(path = path)
?load_uv
path <- system.file("extdata", package = "fffprocessr")
load_mals(path = path)
document()
use_test("load_mals")
?load_uv
?load_mals
?expect_error
path <- system.file("extdata", package = "fffprocessr")
expect_error(
load_mals(path = path),
"No filenames match the naming convention for MALS data.
Use 'angle_names=?' to specify a non-default naming scheme"
)
test_that("load_mals() yields the expected error message when no files match the naming convention.", {
path <- system.file("extdata", package = "fffprocessr")
expect_error(
load_mals(path = path),
"No filenames match the naming convention for MALS data.
Use 'angle_names=?' to specify a non-default naming scheme"
)
})
test_that("load_mals() yields the expected error message when no files match the naming convention.", {
path <- system.file("extdata", package = "fffprocessr")
expect_error(
load_mals(path = path),
"No filenames"
)
})
document()
check()
?load_icp
load_uv
?load_uv
path <- system.file("extdata/mals", package = "fffprocessr")
load_uv(path = path, UV254_1, UV254_2, LS90)
?load_mals
?message
?load_mals
path <- system.file("extdata/mals", package = "fffprocessr")
path
file_list <- list.files(path = path, pattern = "*.txt", full.names = TRUE)
file_list[stringr::str_detect(file_list, "ls\\d+-\\d+")]
mals_files <- file_list[stringr::str_detect(file_list, "ls\\d+-\\d+")]
paste0("The following files include the default naming convention for MALS data: ", mals_files)
if(length(mals_files) > 0) message(
paste0("The following files include the default naming convention for MALS data: ", paste(mals_files, collapse = ", "))
)
paste0("The following files include the default naming convention for MALS data: ", paste(mals_files, collapse = ", "))
paste0("The following files include the default naming convention for MALS data: ", paste(mals_files, collapse = ",\n"))
if(length(mals_files) > 0) message(
"Some files include the default naming convention for MALS data: "
)
if(length(mals_files) > 0) message(
"Some files include the default naming convention for MALS data."
)
if(length(mals_files) > 0) message(
"Some files include the default naming convention for MALS data (e.g., 'ls7-20')."
)
?warning
if(length(mals_files) > 0) warning(
"Some files include the default naming convention for MALS data (e.g., 'ls7-20')."
)
?expect_warning
document()
if(length(mals_files) > 0) warning(
"Some filenames include the default naming convention for MALS data (e.g., 'ls7-20')."
)
test_that("load_uv() yields the expected warning when some files match the naming convention for MALS data.", {
path <- system.file("extdata/mals", package = "fffprocessr") # wrong path
expect_warning(
load_uv(path = path),
"Some filenames include"
)
})
path <- system.file("extdata/mals", package = "fffprocessr") # wrong path
load_uv(path = path)
?load_uv
load_uv(path = path, UV254_1)
test_that("load_uv() yields the expected warning when some files match the naming convention for MALS data.", {
path <- system.file("extdata/mals", package = "fffprocessr") # wrong path
expect_warning(
load_uv(path = path, UV254_1),
"Some filenames include"
)
})
document()
check()
load_uv

mod <- deconvolve_fff(x, y, h = c(1, 1), mu = c(3, 7), s = c(1, 1), g = c(1, 1))
plot(x, y)
lines(x, mod$fitted, col = "red")
document()
check()
?deconvolve_fff
document()
?deconvolve_fff
set.seed(0)
x <- seq(0, 10, length.out = 100)
y <- exp(-(x - 3) ^ 2 / 2) + exp(-(x - 7) ^ 2 / 2) + rnorm(100, 0, .1) # two gaussian peaks
deconvolve_fff(x, y, h = c(1, 1), mu = c(3, 7), s = c(1, 1), g = c(1, 1))
document()
?deconvolve_fff
check()
load_all()
?deconvolve_fff
library("devtools")
load_all()
?deconvolve_fff
set.seed(0)
x <- seq(0, 10, length.out = 100)
# two gaussian peaks:
y <- exp(-(x - 3) ^ 2 / 2) + exp(-(x - 7) ^ 2 / 2) + rnorm(100, 0, .1)
deconvolve_fff(x, y, h = c(1, 1), mu = c(3, 7), s = c(1, 1), g = c(1, 1))
system.file("exdata", package = "fffprocessr")
system.file("extdata", package = "fffprocessr")
system.file("extdata", package = "fffprocessr")
path <- system.file("extdata", package = "fffprocessr")
system.file("extdata", package = "fffprocessr")
list.files(system.file("extdata", package = "fffprocessr"))
path
paste0(path, "mw_calibration")
paste(path, "mw_calibration", sep = "/")
file <- readr::read_csv(paste(path, "mw_calibration", sep = "/"))
paste(path, "mw_calibration", sep = "/")
list.files(paste(path, "mw_calibration", sep = "/"))
library("tidyverse")
system.file("extdata", package = "fffprocessr") %>% paste("mw_calibration/2019-01-23_mw_calibration.csv") %>%
read_csv()
system.file("extdata", package = "fffprocessr") %>% paste("mw_calibration/2019-01-23_mw_calibration.csv", sep = "/") %>%
read_csv()
system.file("extdata", package = "fffprocessr") %>%
paste("mw_calibration/2019-01-23_mw_calibration.csv", sep = "/) %>%
read_csv() %>%
with(mw_calibrate(peak_retention_time, mw_kda))
system.file("extdata", package = "fffprocessr") %>%
paste("mw_calibration/2019-01-23_mw_calibration.csv", sep = "/") %>%
read_csv() %>%
with(mw_calibrate(peak_retention_time, mw_kda))
system.file("extdata", package = "fffprocessr") %>%
paste("mw_calibration/2019-01-23_mw_calibration.csv", sep = "/") %>%
read_csv() %>%
with(calibrate_mw(peak_retention_time, mw_kda))
system.file("extdata", package = "fffprocessr") %>%
paste("mw_calibration/2019-01-23_mw_calibration.csv", sep = "/") %>%
read_csv() %>%
with(calibrate_mw(peak_retention_time, mw = mw_kda))
system.file("extdata", package = "fffprocessr") %>%
paste("mw_calibration/2019-01-23_mw_calibration.csv", sep = "/") %>%
read_csv()
system.file("extdata", package = "fffprocessr") %>%
paste("mw_calibration/2019-01-23_mw_calibration.csv", sep = "/") %>%
read_csv() %>%
with(calibrate_mw(peak_retention_time, mw_kda))
system.file("extdata", package = "fffprocessr") %>%
paste("mw_calibration/2019-01-23_mw_calibration.csv", sep = "/") %>%
read_csv()
system.file("extdata/mw_calibration", package = "fffprocessr") %>%
list.files(full.names = TRUE) %>%
read_csv() %>%
with(calibrate_mw(peak_retention_time, mw_kda, type = "quadratic", predict = FALSE))
system.file("extdata/mw_calibration", package = "fffprocessr") %>%
list.files(full.names = TRUE) %>%
read_csv() %>%
with(calibrate_mw(peak_retention_time, mw_kda,  predict = FALSE))
system.file("extdata/mw_calibration", package = "fffprocessr") %>%
list.files(full.names = TRUE) %>%
read_csv() %>%
with(calibrate_mw(peak_retention_time, mw_kda))
system.file("extdata/mw_calibration", package = "fffprocessr") %>%
list.files(full.names = TRUE) %>%
read_csv() %>%
with(calibrate_mw(peak_retention_time, mw_kda,  predict = TRUE))
deconvolve_fff
document()
check()
document()
check()
system.file("extdata/mw_calibration", package = "fffprocessr") %>%
list.files(full.names = TRUE) %>%
read_csv()
system.file("extdata/mw_calibration", package = "fffprocessr") %>%
list.files(full.names = TRUE) %>%
read_csv() %>% pull(peak_retention_time)
system.file("extdata/mw_calibration", package = "fffprocessr") %>%
list.files(full.names = TRUE) %>%
read_csv() %>% pull(mw_kda)
retention <- c(11.35890, 19.49773, 19.24173, 13.88310, 18.73001, 17.67315)
mw_kda <- c(0.69, 2000.00, 440.00, 1.80, 158.00, 44.00)
calibrate_mw(retention, mw_kda, predict = FALSE))
calibrate_mw(retention, mw_kda, predict = FALSE)
retention <- c(11.35890, 19.49773, 19.24173, 13.88310, 18.73001, 17.67315)
mw_kda <- c(0.69, 2000.00, 440.00, 1.80, 158.00, 44.00)
calibrate_mw(retention, mw_kda, newdata = c(1, 10, 100, 1000), predict = TRUE)
retention <- c(11.35890, 19.49773, 19.24173, 13.88310, 18.73001, 17.67315)
mw_kda <- c(0.69, 2000.00, 440.00, 1.80, 158.00, 44.00)
calibrate_mw(retention, mw_kda, newdata = c(1, 10, 100, 1000), predict = TRUE)
document()
check()
load_all()
?calibrate_mw
document()
?calibrate_mw
document()
?calibrate_mw
retention <- c(11.35890, 19.49773, 19.24173, 13.88310, 18.73001, 17.67315)
mw_kda <- c(0.69, 2000.00, 440.00, 1.80, 158.00, 44.00)
# return tick positions for 1, 10, 100, and 1000 kDa,
# based on a quadratic calibration curve:
calibrate_mw(retention, mw_kda, newdata = c(1, 10, 100, 1000), predict = TRUE)
[Package fffprocessr version 0.0.0.9000 ]
retention <- c(11.35890, 19.49773, 19.24173, 13.88310, 18.73001, 17.67315)
mw_kda <- c(0.69, 2000.00, 440.00, 1.80, 158.00, 44.00)
# return tick positions for 1, 10, 100, and 1000 kDa,
# based on a quadratic calibration curve:
calibrate_mw(retention, mw_kda, newdata = c(1, 10, 100, 1000), predict = TRUE)
check()
?lm
document()
check()
?calibrate_mw
retention <- c(11.35890, 19.49773, 19.24173, 13.88310, 18.73001, 17.67315)
mw_kda <- c(0.69, 2000.00, 440.00, 1.80, 158.00, 44.00)
# return tick positions for 1, 10, 100, and 1000 kDa,
# based on a quadratic calibration curve:
calibrate_mw(retention, mw_kda, newdata = c(1, 10, 100, 1000), predict = TRUE)
build_readme()
use_r("correct_baseline")
?data.frame()
data.frame(date = as.Date("2021-01-01"))
data.frame(date = as.Date("2021-01-01"), sample = "a", param = "56Fe")
data.frame(date = as.Date("2021-01-01"), sample = "a", param = "56Fe", time = seq(0, 30, by = 1))
data.frame(date = as.Date("2021-01-01"), sample = "a", param = "56Fe", time = seq(0, 30, by = .1))
data.frame(date = as.Date("2021-01-01"), sample = "a", param = "56Fe", time = seq(0, 30, by = .1), conc = time)
data.frame(date = as.Date("2021-01-01"), sample = "a", param = "56Fe", time = seq(0, 30, by = .1), conc = 1)
data.frame(date = as.Date("2021-01-01"), sample = "a", param = "56Fe", time = seq(0, 30, by = .1), conc = runif())
seq(0, 30, by = .1)
seq(0, 30, by = .1) %>% length()
data.frame(date = as.Date("2021-01-01"), sample = "a", param = "56Fe", time = seq(0, 30, by = .1), conc = runif(301, 0, 1))
document()
?correct_baseline()
data <- data.frame(
date = as.Date("2021-01-01"),
sample = "a",
param = "56Fe",
time = seq(0, 30, by = .1),
conc = runif(301, 0, 1)
)
data$conc <- data$conc + data$time
data %>% ggplot(aes(time, conc)) + geom_line()
data %>% correct_baseline() %>% ggplot(aes(time, conc)) + geom_line()
data %>% ggplot(aes(time, conc)) + geom_line()
data %>% correct_baseline(.2, 29.8) %>% ggplot(aes(time, conc)) + geom_line()
document()
?correct_baseline()
data <- data.frame(
date = as.Date("2021-01-01"),
sample = "a",
param = "56Fe",
time = seq(0, 30, by = .1),
conc = runif(301, 0, 1)
)
data$conc <- data$conc + data$time
correct_baseline(data, left = .2, right = 29.8)
data %>% correct_baseline(data, left = .2, right = 29.8) %>% ggplot(aes(time, conc)) + geom_line()
data  %>% ggplot(aes(time, conc)) + geom_line()
data %>% correct_baseline(data, left = .2, right = 29.8)
document()
check()
document()
?correct_baseline
document()
?correct_baseline
check()
library(devtools)
use_r("load_icp")
system.file("extdata", package = "fffprocessr")
list.files(system.file("extdata", package = "fffprocessr"))
load_all()
path <- system.file("extdata", package = "fffprocessr")
load_icp(path = path)
document()
check()
?load_icp
use_r("load_vu")
use_r("load_uv")
path <- system.file("extdata", package = "fffprocessr")
load_uv(path = path, UV254_1, UV254_2, LS90)
load_uv(path = path)
document()
load_all
load_uv
path <- system.file("extdata", package = "fffprocessr")
load_uv(path = path)
document()
laod_uv
load_uv
path <- system.file("extdata", package = "fffprocessr")
load_uv(path = path, UV254_1, UV254_2, LS90)
load_uv(path = path, UV254_1, UV254_2)
load_uv(path = path, UV254_1)
load_uv(path = path, UV254_1, UV254_2)
load_uv(path = path, UV254_1, UV254_2, LS90)
document()
check()
build_readme()
$$y = \frac{h\sigma}{\tau}\sqrt{\frac{\pi}{2}} exp\left(\frac{1}{2}(\frac{\sigma}{\tau})^2 - \frac{x-\mu}{\tau}\right)erfc\left(\frac{1}{\sqrt{2}}\left(\frac{\sigma}{\tau} - \frac{x-\mu}{\sigma}\right)\right)$$
build_readme()
?load_uv
path <- system.file("extdata", package = "fffprocessr")
load_uv(path = path, UV254_1, UV254_2, LS90)
?load_icp
path <- system.file("extdata", package = "fffprocessr")
load_icp(path = path)
library(devtools)
use_r("load_mals")
paste0(system.file("extdata", package = "fffprocessr"), "/mals")
load_mals(path = path)
load_all()
load_mals(path = path)
path <- paste0(system.file("extdata", package = "fffprocessr"), "/mals")
path
system.file("extdata", package = "fffprocessr")
list.files(system.file("extdata", package = "fffprocessr"))
list.files(system.file("extdata/mals", package = "fffprocessr"))
system.file("extdata/mals", package = "fffprocessr")
path <- system.file("extdata/mals", package = "fffprocessr")
path <- system.file("extdata/mals", package = "fffprocessr")
load_mals(path = path)
document()
?load_mals
path <- system.file("extdata/mals", package = "fffprocessr")
load_mals(path = path)
use_r("combine_fff")
path <- system.file("extdata", package = "fffprocessr")
combine_fff(load_icp(path), load_uv(path))
combine_fff(load_icp(path), load_uv(path, UV254_1))
document()
?combine_fff
path <- system.file("extdata", package = "fffprocessr")
combine_fff(load_icp(path), load_uv(path, UV254_1))
check()
use_r("calculate_rh")
?calculate_rh
tr <- seq(11, 20, by = .1)
calculate_rh(tr)
tr <- seq(11, 20, by = 1)
calculate_rh(tr)
tr <- seq(11, 20, by = 1)
source('~/Documents/GitHub/fffprocessr/R/calculate_rh.R', echo=TRUE)
calculate_rh(tr)
document()
`rm(list = c("calculate_rh"))`
ls()
rm(list = ls())
ls()
load_all()
tr <- seq(11, 20, by = 1)
calculate_rh(tr)
tr <- seq(11.6, 15.6, by = .1)
calculate_rh(tr)
document()
document()
check()
use_r("calculate_rg")
path <- system.file("extdata/mals", package = "fffprocessr")
mals_data <- load_mals(path = path)
calculate_rg(mals_data)
rg_select <- function(x) {
if(method == "zimm") {
dplyr::select(x,
file, date, sample, .data$param, .data$timeslice, .data$time, .data$conc, .data$theta,
.data$rayleigh_ratio, .data$rg_zimm
)
} else if(method == "watt") {
dplyr::select(
file, date, sample, .data$param, .data$timeslice, .data$time, .data$conc, .data$theta,
.data$rayleigh_ratio, .data$rg_watt
)
} else "Choose either method 'zimm' or 'watt'"
}
document()
load_all()
path <- system.file("extdata/mals", package = "fffprocessr")
mals_data <- load_mals(path = path)
calculate_rg(mals_data)
calculate_rg(mals_data, method = "watt")
document()
calculate_rg(mals_data)
calculate_rg(mals_data, method = "watt")
?calculate_rg
document()
path <- system.file("extdata/mals", package = "fffprocessr")
mals_data <- load_mals(path = path)
calculate_rg(mals_data)
check()
build_readme()
pi * 180 / 180
pi * 360 / 180
pi * 360 / 180
mals_rg %>%
filter(timeslice %in% c(17.1, 24.1, 40)) %>%
mutate(
timeslice = paste(timeslice, "min."),
x = sin(pi * theta / 360) ^ 2,
y = 1 / rayleigh_ratio
) %>%
ggplot(aes(x, y)) +
facet_wrap(vars(timeslice), scales = "free_y") +
geom_smooth(method = "lm") +
geom_point() +
labs(x = expression("sin"^2*"("*theta*"/2)"), y = "1/R")
build_readme()
mals_rg %>%
mutate(
timeslice = paste(timeslice, "min."),
x = sin(pi * theta / 360) ^ 2,
y = 1 / rayleigh_ratio
) %>%
ggplot(aes(x, y)) +
facet_wrap(vars(timeslice), scales = "free_y") +
geom_smooth(method = "lm") +
geom_point()
build_readme()
build_readme()
?calculate_rg
library(devtools)
use_r("combine_fff")
document()
load_all()
?combine_fff
path <- system.file("extdata", package = "fffprocessr")
combine_fff(load_uv(path, UV254_1))
combine_fff(load_icp(path))
document()
load_all()
?combine_fff
check()
combine_fff
combine_fff(load_icp(path))
library(devtools)
use_r("load_icp")
document()
document()
check()
document()
check()
document()
?load_icp
?strptime
document()
?load_icp
?strptime
document()
use_r("laod_uv")
use_r("load_uv")
document()
load_all()
?load_icp
path <- system.file("extdata", package = "fffprocessr")
load_icp(path = path)
?load_uv
path <- system.file("extdata", package = "fffprocessr")
load_uv(path = path, UV254_1, UV254_2, LS90)
?read_table2
document()
check()
use_r("load_uv")
?load_uv
path <- system.file("extdata", package = "fffprocessr")
nm1 = "X2"; nm2 = "X4"; nm3 = "X6";
date_regex = "\\d{4}-\\d{2}-\\d{2}"; date_format = "%Y-%m-%d"
nm1 = UV254_1
nm1 = "UV254_1"
list.files(path = path, pattern = "*.txt", full.names = TRUE) %>%
rlang::set_names() %>%
purrr::map_dfr(
~ readr::read_table2(
.x, col_names = FALSE,
col_types = readr::cols(.default = readr::col_character())
), .id = "file"
) %>%
dplyr::rename(
time = .data$X1, {{nm1}} := .data$X2,
{{nm2}} := .data$X4, {{nm3}} := .data$X6
)
list.files(path = path, pattern = "*.txt", full.names = TRUE) %>%
rlang::set_names() %>%
purrr::map_dfr(
~ readr::read_table2(
.x, col_names = FALSE,
col_types = readr::cols(.default = readr::col_character())
), .id = "file"
) %>%
dplyr::rename(
time = .data$X1, {{nm1}} := .data$X2,
{{nm2}} := .data$X4, {{nm3}} := .data$X6
) %>%
# deselect unnamed columns:
dplyr::select_at(dplyr::vars(-tidyselect::starts_with("X")))
list.files(path = path, pattern = "*.txt", full.names = TRUE) %>%
rlang::set_names() %>%
purrr::map_dfr(
~ readr::read_table2(
.x, col_names = FALSE,
col_types = readr::cols(.default = readr::col_character())
), .id = "file"
) %>%
dplyr::rename(
time = .data$X1, {{nm1}} := .data$X2,
{{nm2}} := .data$X4, {{nm3}} := .data$X6
) %>%
# deselect unnamed columns:
dplyr::select_at(dplyr::vars(-tidyselect::starts_with("X"))) %>%
dplyr::mutate(date = stringr::str_extract(file, date_regex) %>% as.Date(date_format))
list.files(path = path, pattern = "*.txt", full.names = TRUE) %>%
rlang::set_names() %>%
purrr::map_dfr(
~ readr::read_table2(
.x, col_names = FALSE,
col_types = readr::cols(.default = readr::col_character())
), .id = "file"
) %>%
dplyr::rename(
time = .data$X1, {{nm1}} := .data$X2,
{{nm2}} := .data$X4, {{nm3}} := .data$X6
) %>%
# deselect unnamed columns:
dplyr::select_at(dplyr::vars(-tidyselect::starts_with("X"))) %>%
dplyr::mutate(date = stringr::str_extract(file, date_regex) %>% as.Date(date_format)) %>%
tidyr::pivot_longer(-c(file, date, .data$time), names_to = "param", values_to = "conc")
list.files(path = path, pattern = "*.txt", full.names = TRUE) %>%
rlang::set_names() %>%
purrr::map_dfr(
~ readr::read_table2(
.x, col_names = FALSE,
col_types = readr::cols(.default = readr::col_character())
), .id = "file"
) %>%
dplyr::rename(
time = .data$X1, {{nm1}} := .data$X2,
{{nm2}} := .data$X4, {{nm3}} := .data$X6
) %>%
# deselect unnamed columns:
dplyr::select_at(dplyr::vars(-tidyselect::starts_with("X"))) %>%
dplyr::mutate(date = stringr::str_extract(file, date_regex) %>% as.Date(date_format)) %>%
tidyr::pivot_longer(-c(file, date, .data$time), names_to = "param", values_to = "conc") %>%
dplyr::filter(!stringr::str_detect(.data$param, "^X\\d$"))
list.files(path = path, pattern = "*.txt", full.names = TRUE) %>%
rlang::set_names() %>%
purrr::map_dfr(
~ readr::read_table2(
.x, col_names = FALSE,
col_types = readr::cols(.default = readr::col_character())
), .id = "file"
) %>%
dplyr::rename(
time = .data$X1, {{nm1}} := .data$X2,
{{nm2}} := .data$X4, {{nm3}} := .data$X6
) %>%
# deselect unnamed columns:
dplyr::select_at(dplyr::vars(-tidyselect::starts_with("X"))) %>%
dplyr::mutate(date = stringr::str_extract(file, date_regex) %>% as.Date(date_format)) %>%
tidyr::pivot_longer(-c(file, date, .data$time), names_to = "param", values_to = "conc") %>%
dplyr::filter(!stringr::str_detect(.data$param, "^X\\d$")) %>%  # remove unnamed parameters
dplyr::select(file, date, .data$param, .data$time, .data$conc)
list.files(path = path, pattern = "*.txt", full.names = TRUE) %>%
rlang::set_names() %>%
purrr::map_dfr(
~ readr::read_table2(
.x, col_names = FALSE,
col_types = readr::cols(.default = readr::col_character())
), .id = "file"
) %>%
dplyr::rename(
time = .data$X1, {{nm1}} := .data$X2,
{{nm2}} := .data$X4, {{nm3}} := .data$X6
) %>%
# deselect unnamed columns:
dplyr::select_at(dplyr::vars(-tidyselect::matches("^X\\d$"))) %>%
dplyr::mutate(date = stringr::str_extract(file, date_regex) %>% as.Date(date_format)) %>%
tidyr::pivot_longer(-c(file, date, .data$time), names_to = "param", values_to = "conc") %>%
dplyr::mutate(time = as.numeric(time), conc = as.numeric(conc)) %>%
dplyr::select(file, date, .data$param, .data$time, .data$conc)
document()
load_all()
?load_uv
path <- system.file("extdata", package = "fffprocessr")
load_uv(path = path, UV254_1, UV254_2, LS90)
use_r("load_mals")
document()
?load_icp
path <- system.file("extdata", package = "fffprocessr")
load_icp(path = path)
?load_uv
path <- system.file("extdata", package = "fffprocessr")
load_uv(path = path, UV254_1, UV254_2, LS90)
?load_mals
path <- system.file("extdata/mals", package = "fffprocessr")
load_mals(path = path)
check()
